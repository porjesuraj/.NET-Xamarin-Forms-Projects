// This file has been autogenerated from a class added in the UI designer.

using System;
using DeliveryApp.iOS.Models;
using Foundation;
using UIKit;

namespace DeliveryApp.iOS
{
	public partial class RegisterViewController : UIViewController
	{
		public string emailAddress { get; set; }

		public RegisterViewController (IntPtr handle) : base (handle)
		{
			

		}

        public override void ViewDidLoad()
        {
			emailTextField.Text = emailAddress;

            base.ViewDidLoad();

            registerButton.TouchUpInside += RegisterButton_TouchUpInside;

            emailTextField.ShouldReturn +=  (textField) => { ((UITextField)textField).ResignFirstResponder(); return true; };
            passwordTextField.ShouldReturn += (textField) => { ((UITextField)textField).ResignFirstResponder(); return true; };

            confirmPasswordTextField.ShouldReturn += (textField) => { ((UITextField)textField).ResignFirstResponder(); return true; };

        }

        private async void RegisterButton_TouchUpInside(object sender, EventArgs e)
        {

            string email = emailTextField.Text;

            string password = passwordTextField.Text;

            string confirmPassword = confirmPasswordTextField.Text;

           var result = await User.Register(email,password,confirmPassword);

            if(result)
            {
                var alert = UIAlertController.Create("Success", "User inserted", UIAlertControllerStyle.Alert);

                alert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default,null));
                PresentViewController(alert, true, null);
            }else
            {
                var alert = UIAlertController.Create("Failed", "User not inserted", UIAlertControllerStyle.Alert);

                alert.AddAction(UIAlertAction.Create("OK", UIAlertActionStyle.Default, null));
                PresentViewController(alert, true, null);
            }
        }
    }
}
